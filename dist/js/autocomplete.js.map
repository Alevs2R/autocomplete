{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 453310624676bfde9f33","webpack:///./scss/core.scss","webpack:///./js/core.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,yC;;;;;;ACAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,gBAAgB;AAChB,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,E","file":"js/autocomplete.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Autocomplete\"] = factory();\n\telse\n\t\troot[\"Autocomplete\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 453310624676bfde9f33","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scss/core.scss\n// module id = 0\n// module chunks = 0","require('../scss/core.scss');\n\nmodule.exports = AutocompleteFactory;\n\nvar console = window.console;\n\n// extend objects\nfunction extend(a, b) {\n    for (var prop in b) {\n        a[prop] = b[prop];\n    }\n    return a;\n}\n\nfunction AutocompleteFactory(elem, options) {\n\n    if (typeof elem == 'string') {\n        elem = document.querySelector(elem);\n    }\n\n    return new Autocomplete(elem, options);\n}\n\nvar _options = {\n    'source': null,\n    'arrow': false,\n    'numberOfRows': 5,\n    'searchByEntry:': false,\n    'idProperty': 'Id',\n    'maxResults': 20,\n    'minHeight': 200,\n    'maxHeight': 450,\n    'displayedProperty': \"City\",\n    'dropdownPosition': \"top\",\n};\n\nfunction Autocomplete(elem, options) {\n    this.options = extend(this.options, options);\n\n    if (typeof this.options.source == 'string') this._loadJSON(this.options.source).then((data) => this.data = data);\n    else this.data = this.options.source;\n\n    this.input = elem;\n    this._bindEvents();\n\n    this.handleEvent = function (e) {\n        switch (e.type) {\n            case \"focus\":\n                //this._showDropdown();\n                break;\n            case \"input\":\n                this._search(this.input.value);\n                break;\n        }\n    }\n}\n\nAutocomplete.prototype = {\n    options: _options,\n    lastSearch: null,\n    isDropdownCreated: false,\n    _bindEvents(){\n        this.input.addEventListener(\"focus\", this, false);\n        this.input.addEventListener(\"input\", this, false);\n    },\n    _unBindEvents(){\n    },\n    _createDropdown(){\n        this.isDropdownCreated = true;\n\n        let dropdown = document.createElement('div');\n        dropdown.className = 'autocomplete-dropdown';\n        dropdown.style.visibility = 'hidden';\n\n        this.elementsList = document.createElement('ul');\n        dropdown.appendChild(this.elementsList);\n        document.body.appendChild(dropdown);\n        this.dropdown = dropdown;\n    },\n    _getDropdownHeight(availableSpace){\n        return Math.min(Math.max(this.options.minHeight, availableSpace), this.options.maxHeight);\n    },\n\n    getCoords(elem) { // crossbrowser version\n        var box = elem.getBoundingClientRect();\n\n        var body = document.body;\n        var docEl = document.documentElement;\n\n        var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n        var clientTop = docEl.clientTop || body.clientTop || 0;\n        var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n\n        return {top: Math.round(top), bottom: Math.round(top) + elem.offsetHeight, left: Math.round(left)};\n    },\n\n    _showDropdown(){\n        const OFFSET_INPUT = 2;\n        const WIDTH_INCREASE = 30;\n        let coords = this.getCoords(this.input);\n        let offsetBottom = document.body.clientHeight - coords.bottom;\n\n        if (this.options.dropdownPosition == 'top' || (this.options.dropdownPosition == 'auto' && offsetBottom < this.options.minHeight)) {\n            this.dropdown.style.maxHeight = this._getDropdownHeight(coords.top - OFFSET_INPUT) + 'px';\n            this.dropdown.style.bottom = document.body.clientHeight - coords.top + OFFSET_INPUT + 'px';\n        }\n        else {\n            this.dropdown.style.top = (coords.top + this.input.offsetHeight + OFFSET_INPUT) + \"px\";\n            this.dropdown.style.maxHeight = this._getDropdownHeight(offsetBottom - OFFSET_INPUT) + 'px';\n        }\n        let maxWidth = document.body.clientWidth - coords.left;\n\n        this.dropdown.style.left = coords.left + 'px';\n        this.dropdown.style.maxWidth = maxWidth + 'px';\n        this.dropdown.style.minWidth = Math.min(this.input.offsetWidth + WIDTH_INCREASE, maxWidth) + 'px';\n        this.dropdown.style.visibility = 'visible';\n    },\n    _loadJSON(url){\n        return new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n            xhr.onload = function () {\n                if (this.status >= 200 && this.status < 300) {\n                    resolve(JSON.parse(xhr.responseText));\n                } else {\n                    reject({\n                        status: this.status,\n                        statusText: xhr.statusText\n                    });\n                }\n            };\n            xhr.onerror = function () {\n                reject({\n                    status: this.status,\n                    statusText: xhr.statusText\n                });\n            };\n            xhr.send();\n        });\n    },\n    _getSearchResult(value){\n        let searchData;\n        if (this.lastSearch && value.startsWith(this.lastSearch.value)) {\n            searchData = this.lastSearch.result;\n        }\n        else searchData = this.data;\n\n        if (!this.data) return [];\n        let result = [];\n        for (let row of this.data) {\n            for (let property in row) {\n                if (row.hasOwnProperty(property) && String(row[property]).startsWith(value)) {\n                    result.push(row);\n                    break;\n                }\n            }\n            if (result.length == this.options.maxResults) break;\n        }\n\n        this.lastSearch = {value, result};\n        return result;\n    },\n    _search(value){\n        this._showSearchResult(this._getSearchResult(value.trim()));\n    },\n    _removeDropdown(){\n        if (!this.isDropdownCreated) return;\n        this.dropdown.parentNode.removeChild(this.dropdown);\n        this.isDropdownCreated = false;\n    },\n    _showSearchResult(result){\n        if (result.length == 0) {\n            this._removeDropdown();\n            return;\n        }\n\n        let list = '';\n        for (row of result) {\n            list += '<li>' + row[this.options.displayedProperty] + '</li>';\n        }\n        if (!this.isDropdownCreated) {\n            this._createDropdown();\n            this.elementsList.innerHTML = list;\n            this._showDropdown();\n\n        }\n        else this.elementsList.innerHTML = list;\n    },\n    _selectElement(){\n    },\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}